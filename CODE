import streamlit as st

class EventTicketBookingSystem:
    def __init__(self):
        # Initialize events and bookings using Streamlit's session state
        if 'events' not in st.session_state:
            st.session_state.events = {
                "Concert": {"price": 50, "tickets": 100},
                "Play": {"price": 30, "tickets": 50},
                "Sports Game": {"price": 75, "tickets": 200}
            }
        
        if 'bookings' not in st.session_state:
            st.session_state.bookings = []

    def display_events(self):
        st.subheader("Available Events")
        for event, details in st.session_state.events.items():
            st.write(f"{event} - ${details['price']} per ticket - {details['tickets']} tickets left")

    def check_availability(self, event_name, ticket_count):
        if st.session_state.events[event_name]["tickets"] >= ticket_count:
            return True
        else:
            st.error("Sorry, not enough tickets available.")
            return False

    def book_ticket(self):
        st.subheader("Book Tickets")

        # Input Fields
        name = st.text_input("Enter your name:")
        event_name = st.selectbox("Choose an event:", list(st.session_state.events.keys()))
        ticket_count = st.number_input("Enter number of tickets:", min_value=1, step=1)

        # Calculate Total Cost
        total_cost = st.session_state.events[event_name]["price"] * ticket_count
        st.write(f"Total Cost: ${total_cost}")

        # Submit Button
        if st.button("Confirm Booking"):
            if name and event_name and ticket_count > 0:
                if self.check_availability(event_name, ticket_count):
                    # Update ticket count and record booking
                    st.session_state.events[event_name]["tickets"] -= ticket_count
                    st.session_state.bookings.append({
                        "name": name,
                        "event": event_name,
                        "tickets": ticket_count,
                        "total_cost": total_cost
                    })
                    st.success(f"Booking confirmed! {ticket_count} ticket(s) for {event_name} under the name {name}.")
            else:
                st.error("Please enter your name and select a valid number of tickets.")

    def view_bookings(self):
        st.subheader("Your Bookings")

        if not st.session_state.bookings:
            st.info("No bookings found.")
        else:
            for booking in st.session_state.bookings:
                st.write(f"Name: {booking['name']}, Event: {booking['event']}, Tickets: {booking['tickets']}, Total Cost: ${booking['total_cost']}")

    def run(self):
        st.title("Event Ticket Booking System")

        # Sidebar Menu
        menu = ["Book Tickets", "View Bookings"]
        choice = st.sidebar.selectbox("Menu", menu)

        if choice == "Book Tickets":
            self.book_ticket()
        elif choice == "View Bookings":
            self.view_bookings()

if __name__ == "__main__":
    system = EventTicketBookingSystem()
    system.run()
